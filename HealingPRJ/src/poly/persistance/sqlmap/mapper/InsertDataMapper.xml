<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.IInsertDataMapper">

	<!-- 서비스 만족도 데이터 넣기 -->
	<insert id="serviceInsertData" parameterType="ServiceInsertDTO">
		INSERT INTO SERVICE_ENV_SATISFACTION
		(
		SERVICE_SEQ,
		OPENDAY,
		SEX,
		AGE,
		RESIDENCE,
		JOB,
		PTCPROGRAM,
		AGENCY,
		EVAL_DATE,
		SCORE1,	SCORE2,	SCORE3,	SCORE4,	SCORE5,	SCORE6,	SCORE7,
		SCORE8,	SCORE9,	SCORE10, FACILITY_OPINION, SCORE11,	SCORE12, SCORE13, SCORE14,
		SCORE15, SCORE16, OPERATION_OPINION, SCORE17, SCORE18
		)
		VALUES
		<foreach item="serviceDtoList" index="index" collection="serviceDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.SERVICE_SEQ),0)+1 FROM SERVICE_ENV_SATISFACTION A),
		#{serviceDtoList.date},
		#{serviceDtoList.sex},
		#{serviceDtoList.age},
		#{serviceDtoList.residence},
		#{serviceDtoList.job},
		#{serviceDtoList.ptcProgram},
		#{serviceDtoList.agency},
		#{serviceDtoList.date},
		<foreach item="scoreList" index="index" collection="serviceDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>
	
	
	<!-- 프로그램 만족도 데이터 넣기 -->
	<insert id="programInsertData" parameterType="ProgramInsertDTO">
		INSERT INTO PROGRAM_SATISFACTION
		(
		PROGRAM_SEQ,
		OPENDAY,
		SEX,
		AGE,
		RESIDENCE,
		JOB,
		PTCPROGRAM,
		AGENCY,
		DATE,
		PROGRAM_NAME,
		TEACHER,
		PLACE,
		SCORE1,	SCORE2,	SCORE3,	SCORE4,	SCORE5,	SCORE6,	SCORE7,
		SCORE8,	SCORE9,	ETC_OPINION
		)
		VALUES
		<foreach item="programDtoList" index="index" collection="programDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.PROGRAM_SEQ),0)+1 FROM PROGRAM_SATISFACTION A),
		'2021-05-24',
		#{programDtoList.sex},
		#{programDtoList.age},
		#{programDtoList.residence},
		#{programDtoList.job},
		#{programDtoList.ptcProgram},
		#{programDtoList.agency},
		#{programDtoList.date},
		#{programDtoList.programName},
		#{programDtoList.teacher},
		#{programDtoList.place},
		<foreach item="scoreList" index="index" collection="programDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>	
	
	
	<!-- 예방서비스 효과평가 데이터 넣기 -->
	<insert id="preventInsertData" parameterType="PreventInsertDTO">
		INSERT INTO PREVENT_SERVICE
		(
		PREVENT_SEQ,
		OPENDAY,
		AGENCY,
		NAME,
		SEX,
		AGE,
		RESIDENCE,
		JOB,
		PTCPROGRAM,
		PAST_STRESS_EXPERIENCE,
		EVAL_DATE,
		PV,
		SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, SCORE8, SCORE9, SCORE10,
		SCORE11, SCORE12, SCORE13, SCORE14, SCORE15, SCORE16, SCORE17, SCORE18, SCORE19, SCORE20
		)
		VALUES
		<foreach item="preventDtoList" index="index" collection="preventDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.PREVENT_SEQ),0)+1 FROM PREVENT_SERVICE A),
		#{preventDtoList.date},
		#{preventDtoList.agency},
		#{preventDtoList.name},
		#{preventDtoList.sex},
		#{preventDtoList.age},
		#{preventDtoList.residence},
		#{preventDtoList.job},
		#{preventDtoList.ptcProgram},
		#{preventDtoList.past_stress_experience},
		#{preventDtoList.date},
		#{preventDtoList.pv},
		<foreach item="scoreList" index="index" collection="preventDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>	
	
	<!-- 힐링서비스 효과평가 데이터 넣기 -->
	<insert id="healingInsertData" parameterType="HealingInsertDTO">
		INSERT INTO HEALING_SERVICE
		(
		HEALING_SEQ,
		OPENDAY,
		AGENCY,
		NAME,
		SEX,
		AGE,
		RESIDENCE,
		JOB,
		PTCPROGRAM,
		PAST_STRESS_EXPERIENCE,
		EVAL_DATE,
		PV,
		SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, SCORE8, SCORE9, SCORE10,
		SCORE11, SCORE12, SCORE13, SCORE14, SCORE15, SCORE16, SCORE17, SCORE18, SCORE19, SCORE20,
		SCORE21, SCORE22, SCORE23, SCORE24, SCORE25, SCORE26, SCORE27, SCORE28
		)
		VALUES
		<foreach item="healingDtoList" index="index" collection="healingDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.HEALING_SEQ),0)+1 FROM HEALING_SERVICE A),
		#{healingDtoList.date},
		#{healingDtoList.agency},
		#{healingDtoList.name},
		#{healingDtoList.sex},
		#{healingDtoList.age},
		#{healingDtoList.residence},
		#{healingDtoList.job},
		#{healingDtoList.ptcProgram},
		#{healingDtoList.past_stress_experience},
		#{healingDtoList.date},
		#{healingDtoList.pv},
		<foreach item="scoreList" index="index" collection="healingDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>	
	
	
	<!-- 접수서비스 효과평가 데이터 넣기 -->
	<insert id="receiptInsertData" parameterType="ReceiptInsertDTO">
		INSERT INTO COUNSEL_SERVICE
		(
		COUNSEL_SEQ,
		OPENDAY,
		AGENCY,
		NAME,
		SEX,
		AGE,
		RESIDENCE,
		JOB,
		COUNSEL_CONTENTS,
		EVAL_DATE,
		SESSION,
		PAST_STRESS_EXPERIENCE,
		PV,
		SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, SCORE8, SCORE9, SCORE10,
		SCORE11, SCORE12, SCORE13, SCORE14, SCORE15, SCORE16, SCORE17, SCORE18, SCORE19,
		SCORE20, SCORE21, SCORE22, SCORE23, SCORE24, SCORE25, SCORE26, SCORE27, SCORE28, SCORE29,
		SCORE30, SCORE31, SCORE32, SCORE33, SCORE34, SCORE35, SCORE36, SCORE37, SCORE38, SCORE39,
		SCORE40, SCORE41, SCORE42, SCORE43, SCORE44, SCORE45, SCORE46, SCORE47, SCORE48, SCORE49,
		SCORE50, SCORE51, SCORE52, SCORE53, SCORE54, SCORE55, SCORE56, SCORE57, SCORE58, SCORE59,
		SCORE60, SCORE61, SCORE62
		)
		VALUES
		<foreach item="receiptDtoList" index="index" collection="receiptDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.COUNSEL_SEQ),0)+1 FROM COUNSEL_SERVICE A),
		#{receiptDtoList.date},
		#{receiptDtoList.agency},
		#{receiptDtoList.name},
		#{receiptDtoList.sex},
		#{receiptDtoList.age},
		#{receiptDtoList.residence},
		#{receiptDtoList.job},
		#{receiptDtoList.contents},
		#{receiptDtoList.date},
		#{receiptDtoList.session},
		#{receiptDtoList.pastExp},
		#{receiptDtoList.pv},
		<foreach item="scoreList" index="index" collection="receiptDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>	
	
	<!-- HRV 데이터 넣기 -->
	<insert id="hrvInsertData" parameterType="HrvInsertDTO">
		INSERT INTO HRV_SERVICE
		(
		HRV_SEQ,
		OPENDAY,
		AGENCY,
		NAME,
		AGE,
		SEX,
		EQUIPMENT,
		ID,
		JUMIN,
		NUM8,
		NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7
		)
		VALUES
		<foreach item="hrvDtoList" index="index" collection="hrvDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.HRV_SEQ),0)+1 FROM HRV_SERVICE A),
		#{hrvDtoList.date},
		#{hrvDtoList.agency},
		#{hrvDtoList.name},
		#{hrvDtoList.age},
		#{hrvDtoList.sex},
		#{hrvDtoList.equipment},
		#{hrvDtoList.id},
		#{hrvDtoList.jumin},
		#{hrvDtoList.num8},
		<foreach item="scoreList" index="index" collection="hrvDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>

	<!-- 기관명 및 실시일자 조회 -->
	<select id="hasAgencyStartDate" parameterType="HealingInsertDTO" resultType="int">
		SELECT COUNT(*) 
		FROM healing_service
		WHERE agency = #{agency} 
		AND openday = #{openday};
	</select>

	<!-- 기관명 및 실시일자 조회 후 사전 데이터 불러오기 -->
	<select id="getPreviousList" parameterType="HealingInsertDTO"
	resultType="HealingInsertDTO">
	SELECT 
	OPENDAY, AGENCY, NAME, SEX, AGE, RESIDENCE, JOB, PTCPROGRAM, PAST_STRESS_EXPERIENCE,
	EVAL_DATE, PV, 
	CONCAT(SCORE1, ', ', SCORE2, ', ', SCORE3, ', ',
		SCORE4, ', ', SCORE5, ', ', SCORE6, ', ', SCORE7, ', ', SCORE8, ', ',
		SCORE9, ', ', SCORE10, ', ', SCORE11, ', ', SCORE12, ', ', SCORE13, ', ', 
		SCORE14, ', ', SCORE15, ', ', SCORE16, ', ', SCORE17, ', ', SCORE18, ', ', 
		SCORE19, ', ', SCORE20, ', ', SCORE21, ', ', SCORE22, ', ', SCORE23, ', ', 
		SCORE24, ', ', SCORE25, ', ', SCORE26, ', ', SCORE27, ', ', SCORE28) as scoreString2List
	FROM healing_service
	WHERE AGENCY = #{agency}
	AND OPENDAY = #{openday};
	</select>
	
	<!--바이브라 데이터 넣기 -->
	<insert id="vibraInsertData" parameterType="VibraInsertDTO">
		INSERT INTO VIBRA_SERVICE
		(
		VIBRA_SEQ,
		OPENDAY,
		AGENCY,
		NAME,
		AGE,
		SEX,
		EQUIPMENT,
		ID,
		JUMIN,
		NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7,NUM8,NUM9,NUM10
		)
		VALUES
		<foreach item="vibraDtoList" index="index" collection="vibraDtoList" separator=",">
		(
		(SELECT IFNULL(MAX(A.VIBRA_SEQ),0)+1 FROM VIBRA_SERVICE A),
		#{vibraDtoList.date},
		#{vibraDtoList.agency},
		#{vibraDtoList.name},
		#{vibraDtoList.age},
		#{vibraDtoList.sex},
		#{vibraDtoList.equipment},
		#{vibraDtoList.id},
		#{vibraDtoList.jumin},
		<foreach item="scoreList" index="index" collection="vibraDtoList.scoreList" separator=",">
			#{scoreList}
		</foreach>
		)
	</foreach>
	</insert>

</mapper>


